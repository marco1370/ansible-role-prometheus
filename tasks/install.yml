---
- block:
    - name: Create prometheus group
      ansible.builtin.group:
        name: "{{ prometheus_system_group }}"
        state: present
        system: true

    - name: Create prometheus user
      ansible.builtin.user:
        name: "{{ prometheus_system_user }}"
        group: "{{ prometheus_system_user }}"
        shell: /usr/sbin/nologin
        system: true
        createhome: false
        home: /
  when: prometheus_system_user != "root"

- block:
    - name: Download prometheus archive
      ansible.builtin.get_url:
        url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz"
        dest: "{{ prometheus_tmp_directory.stdout }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz"
        force: true
        checksum: "sha256:{{ __prometheus_checksum }}"
        timeout: 30
      retries: 5
      delay: 2

    - name: Unarchive "{{ prometheus_tmp_directory.stdout }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz"
      ansible.builtin.unarchive:
        src: "{{ prometheus_tmp_directory.stdout }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz"
        dest: "{{ prometheus_tmp_directory.stdout }}"
        owner: "{{ prometheus_system_user }}"
        group: "{{ prometheus_system_group }}"
        remote_src: true

    - name: Copy "{{ prometheus_tmp_directory.stdout }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/prometheus" and "{{ prometheus_tmp_directory.stdout }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/promtool" to "{{ prometheus_bin_directory }}"
      ansible.builtin.copy:
        src: "{{ prometheus_tmp_directory.stdout }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/{{ item }}"
        dest: "{{ prometheus_bin_directory }}"
        remote_src: true
        owner: root
        group: root
        mode: 0111
      loop:
        - prometheus
        - promtool
      notify: Restart prometheus

    - name: Remove 'console_libraries' and 'consoles' folders on "{{ prometheus_config_directory }}"
      ansible.builtin.file:
        path: "{{ prometheus_config_directory }}/{{ item }}"
        state: absent
      loop:
        - console_libraries
        - consoles

    - name: Copy "{{ prometheus_tmp_directory.stdout }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/console_libraries" and "{{ prometheus_tmp_directory.stdout }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/consoles" to "{{ prometheus_config_directory }}"
      ansible.builtin.copy:
        src: "{{ prometheus_tmp_directory.stdout }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/{{ item }}"
        dest: "{{ prometheus_config_directory }}"
        remote_src: true
        owner: "{{ prometheus_system_user }}"
        group: "{{ prometheus_system_group }}"
        mode: 0550
      loop:
        - console_libraries
        - consoles
      notify: Restart prometheus

    - name: Remove unnecessary files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ prometheus_tmp_directory.stdout }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz"
        - "{{ prometheus_tmp_directory.stdout }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}"
  when: prometheus_installed_version.stdout < prometheus_version

- name: Create differents Prometheus configuration directories
  block:
    - name: Create "{{ prometheus_config_directory }}"
      ansible.builtin.file:
        path: "{{ prometheus_config_directory }}"
        state: directory
        owner: "{{ prometheus_system_user }}"
        group: "{{ prometheus_system_group }}"
        mode: 0550

    - name: Create "{{ prometheus_storage_dir }}"
      ansible.builtin.file:
        path: "{{ prometheus_storage_dir }}"
        state: directory
        owner: "{{ prometheus_system_user }}"
        group: "{{ prometheus_system_group }}"
        mode: 0770

- name: Create prometheus config files
  ansible.builtin.template:
    src: "{{ item }}.yml.j2"
    dest: "{{ prometheus_config_directory }}/{{ item }}.yml"
    owner: "{{ prometheus_system_user }}"
    group: "{{ prometheus_system_group }}"
    mode: 0440
  loop:
    - prometheus
    - web-config
  notify: Restart prometheus

- name: Create systemd service unit
  ansible.builtin.template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: 0644
  notify: Restart prometheus

- name: Import rsyslog config file
  ansible.builtin.template:
    src: 10-prometheus.conf.j2
    dest: /etc/rsyslog.d/10-prometheus.conf
    owner: root
    group: root
    mode: 0644
  notify: Restart rsyslog

- name: Import logrotate config file
  template:
    src: prometheus.j2
    dest: /etc/logrotate.d/prometheus
    owner: root
    group: root
    mode: 0644
